DROP TABLE IF EXISTS UserUrlOwnership;
DROP TABLE IF EXISTS Urls;
DROP TABLE IF EXISTS Users;

CREATE TABLE USERS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    role VARCHAR(255) NOT NULL DEFAULT 'user',
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_by INT,
    updated_by INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE USERS ADD CONSTRAINT role_check CHECK (role IN ('ADMIN', 'USER'));

CREATE TABLE URLS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    short_url VARCHAR(255) NOT NULL UNIQUE,
    original_url TEXT NOT NULL,
    click_count INT DEFAULT 0,
    created_by INT NOT NULL,
    updated_by INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES USERS(id),
    FOREIGN KEY (updated_by) REFERENCES USERS(id)
);

CREATE TABLE USER_URL_OWNERSHIP (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    url_id INT,
    created_by INT NOT NULL,
    updated_by INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE,
    FOREIGN KEY (url_id) REFERENCES URLS(id) ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES USERS(id),
    FOREIGN KEY (updated_by) REFERENCES USERS(id)
);

ALTER TABLE USERS ADD FOREIGN KEY (created_by) REFERENCES USERS(id);
ALTER TABLE USERS ADD FOREIGN KEY (updated_by) REFERENCES USERS(id);
